Buildfile: /Users/yuta.imaya/git/zlib.js/build.xml

deps:

prebuild:

zlib:
     [java] /Users/yuta.imaya/git/zlib.js/src/adler32.js:71: ERROR - could not determine the type of this expression
     [java]       s1 += array[i++];
     [java]       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/adler32.js:72: ERROR - could not determine the type of this expression
     [java]       s2 += s1;
     [java]       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/adler32.js:72: ERROR - could not determine the type of this expression
     [java]       s2 += s1;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/adler32.js:75: ERROR - could not determine the type of this expression
     [java]     s1 %= 65521;
     [java]     ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/adler32.js:76: ERROR - could not determine the type of this expression
     [java]     s2 %= 65521;
     [java]     ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/adler32.js:79: ERROR - could not determine the type of this expression
     [java]   return ((s2 << 16) | s1) >>> 0;
     [java]            ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/adler32.js:79: ERROR - could not determine the type of this expression
     [java]   return ((s2 << 16) | s1) >>> 0;
     [java]                        ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/bitstream.js:91: ERROR - could not determine the type of this expression
     [java]       Zlib.BitStream.ReverseTable[number] >> (8 - n);
     [java]       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/bitstream.js:106: ERROR - could not determine the type of this expression
     [java]         buffer[index++] = Zlib.BitStream.ReverseTable[current];
     [java]                           ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/bitstream.js:131: ERROR - could not determine the type of this expression
     [java]   return (Zlib.BitStream.ReverseTable[n & 0xFF] << 24) |
     [java]           ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/bitstream.js:132: ERROR - could not determine the type of this expression
     [java]          (Zlib.BitStream.ReverseTable[n >>> 8 & 0xFF] << 16) |
     [java]           ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/bitstream.js:133: ERROR - could not determine the type of this expression
     [java]          (Zlib.BitStream.ReverseTable[n >>> 16 & 0xFF] << 8) |
     [java]           ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/bitstream.js:134: ERROR - could not determine the type of this expression
     [java]           Zlib.BitStream.ReverseTable[n >>> 24 & 0xFF];
     [java]           ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/bitstream.js:164: ERROR - could not determine the type of this expression
     [java]   buffer[index] = Zlib.BitStream.ReverseTable[buffer[index]];
     [java]                   ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/bitstream.js:169: ERROR - could not determine the type of this expression
     [java]     for (j = 0, jl = block.length; j < jl; ++j) {
     [java]          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/bitstream.js:169: ERROR - could not determine the type of this expression
     [java]     for (j = 0, jl = block.length; j < jl; ++j) {
     [java]                      ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/bitstream.js:169: ERROR - could not determine the type of this expression
     [java]     for (j = 0, jl = block.length; j < jl; ++j) {
     [java]                                        ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/bitstream.js:170: ERROR - could not determine the type of this expression
     [java]       output[op++] = block[j];
     [java]                      ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/bitstream.js:188: ERROR - could not determine the type of this expression
     [java] Zlib.BitStream.ReverseTable = (function(table) {
     [java]                                ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/bitstream.js:189: ERROR - could not determine the type of this expression
     [java]   return table;
     [java]          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/bitstream.js:190: ERROR - could not determine the type of this expression
     [java] })((function() {
     [java]     ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/bitstream.js:200: ERROR - could not determine the type of this expression
     [java]     table[i] = (function(n) {
     [java]                 ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/bitstream.js:201: ERROR - could not determine the type of this expression
     [java]       var r = n;
     [java]               ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/bitstream.js:204: ERROR - could not determine the type of this expression
     [java]       for (n >>>= 1; n; n >>>= 1) {
     [java]            ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/bitstream.js:204: ERROR - could not determine the type of this expression
     [java]       for (n >>>= 1; n; n >>>= 1) {
     [java]                      ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/bitstream.js:204: ERROR - could not determine the type of this expression
     [java]       for (n >>>= 1; n; n >>>= 1) {
     [java]                         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/bitstream.js:205: ERROR - could not determine the type of this expression
     [java]         r <<= 1;
     [java]         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/bitstream.js:206: ERROR - could not determine the type of this expression
     [java]         r |= n & 1;
     [java]         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/bitstream.js:206: ERROR - could not determine the type of this expression
     [java]         r |= n & 1;
     [java]              ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/bitstream.js:210: ERROR - could not determine the type of this expression
     [java]       return (r << s & 0xff) >>> 0;
     [java]               ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/heap.js:85: ERROR - could not determine the type of this expression
     [java]       swap = heap[current];
     [java]       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/heap.js:87: ERROR - could not determine the type of this expression
     [java]       heap[parent] = swap;
     [java]                      ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/heap.js:89: ERROR - could not determine the type of this expression
     [java]       swap = heap[current + 1];
     [java]       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/heap.js:91: ERROR - could not determine the type of this expression
     [java]       heap[parent + 1] = swap;
     [java]                          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/heap.js:113: ERROR - could not determine the type of this expression
     [java]   value = heap[0];
     [java]   ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/heap.js:114: ERROR - could not determine the type of this expression
     [java]   index = heap[1];
     [java]   ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/heap.js:138: ERROR - could not determine the type of this expression
     [java]       swap = heap[parent];
     [java]       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/heap.js:140: ERROR - could not determine the type of this expression
     [java]       heap[current] = swap;
     [java]                       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/heap.js:142: ERROR - could not determine the type of this expression
     [java]       swap = heap[parent + 1];
     [java]       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/heap.js:144: ERROR - could not determine the type of this expression
     [java]       heap[current + 1] = swap;
     [java]                           ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/heap.js:152: ERROR - could not determine the type of this expression
     [java]   return {index: index, value: value, length: this.length};
     [java]                  ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/heap.js:152: ERROR - could not determine the type of this expression
     [java]   return {index: index, value: value, length: this.length};
     [java]                                ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:107: ERROR - could not determine the type of this expression
     [java]   switch (cmf & 0x0f) {
     [java]           ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:116: ERROR - could not determine the type of this expression
     [java]   if (((cmf << 8) + flg) % 31 !== 0) {
     [java]         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:116: ERROR - could not determine the type of this expression
     [java]   if (((cmf << 8) + flg) % 31 !== 0) {
     [java]                     ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:117: ERROR - could not determine the type of this expression
     [java]     throw new Error('invalid fcheck flag:' + ((cmf << 8) + flg) % 31);
     [java]                                                ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:117: ERROR - could not determine the type of this expression
     [java]     throw new Error('invalid fcheck flag:' + ((cmf << 8) + flg) % 31);
     [java]                                                            ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:121: ERROR - could not determine the type of this expression
     [java]   if (flg & 0x20) {
     [java]       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:180: ERROR - could not determine the type of this expression
     [java] Zlib.Inflate.Order = (function(table) {
     [java]                       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:181: ERROR - could not determine the type of this expression
     [java]   return USE_TYPEDARRAY ? new Uint16Array(table) : table;
     [java]          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:181: ERROR - could not determine the type of this expression
     [java]   return USE_TYPEDARRAY ? new Uint16Array(table) : table;
     [java]                                           ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:181: ERROR - could not determine the type of this expression
     [java]   return USE_TYPEDARRAY ? new Uint16Array(table) : table;
     [java]                                                    ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:188: ERROR - could not determine the type of this expression
     [java] Zlib.Inflate.LengthCodeTable = (function(table) {
     [java]                                 ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:189: ERROR - could not determine the type of this expression
     [java]   return USE_TYPEDARRAY ? new Uint16Array(table) : table;
     [java]          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:189: ERROR - could not determine the type of this expression
     [java]   return USE_TYPEDARRAY ? new Uint16Array(table) : table;
     [java]                                           ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:189: ERROR - could not determine the type of this expression
     [java]   return USE_TYPEDARRAY ? new Uint16Array(table) : table;
     [java]                                                    ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:201: ERROR - could not determine the type of this expression
     [java] Zlib.Inflate.LengthExtraTable = (function(table) {
     [java]                                  ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:202: ERROR - could not determine the type of this expression
     [java]   return USE_TYPEDARRAY ? new Uint8Array(table) : table;
     [java]          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:202: ERROR - could not determine the type of this expression
     [java]   return USE_TYPEDARRAY ? new Uint8Array(table) : table;
     [java]                                          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:202: ERROR - could not determine the type of this expression
     [java]   return USE_TYPEDARRAY ? new Uint8Array(table) : table;
     [java]                                                   ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:212: ERROR - could not determine the type of this expression
     [java] Zlib.Inflate.DistCodeTable = (function(table) {
     [java]                               ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:213: ERROR - could not determine the type of this expression
     [java]   return USE_TYPEDARRAY ? new Uint16Array(table) : table;
     [java]          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:213: ERROR - could not determine the type of this expression
     [java]   return USE_TYPEDARRAY ? new Uint16Array(table) : table;
     [java]                                           ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:213: ERROR - could not determine the type of this expression
     [java]   return USE_TYPEDARRAY ? new Uint16Array(table) : table;
     [java]                                                    ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:225: ERROR - could not determine the type of this expression
     [java] Zlib.Inflate.DistExtraTable = (function(table) {
     [java]                                ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:226: ERROR - could not determine the type of this expression
     [java]   return USE_TYPEDARRAY ? new Uint8Array(table) : table;
     [java]          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:226: ERROR - could not determine the type of this expression
     [java]   return USE_TYPEDARRAY ? new Uint8Array(table) : table;
     [java]                                          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:226: ERROR - could not determine the type of this expression
     [java]   return USE_TYPEDARRAY ? new Uint8Array(table) : table;
     [java]                                                   ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:236: ERROR - could not determine the type of this expression
     [java] Zlib.Inflate.FixedLiteralLengthTable = (function(table) {
     [java]                                         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:237: ERROR - could not determine the type of this expression
     [java]   return table;
     [java]          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:238: ERROR - could not determine the type of this expression
     [java] })((function() {
     [java]     ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:257: ERROR - could not determine the type of this expression
     [java] Zlib.Inflate.FixedDistanceTable = (function(table) {
     [java]                                    ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:258: ERROR - could not determine the type of this expression
     [java]   return table;
     [java]          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:259: ERROR - could not determine the type of this expression
     [java] })((function() {
     [java]     ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:321: ERROR - could not determine the type of this expression
     [java]     if (octet === void 0) {
     [java]         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:326: ERROR - could not determine the type of this expression
     [java]     bitsbuf |= octet << bitsbuflen;
     [java]                ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:369: ERROR - could not determine the type of this expression
     [java]     if (octet === void 0) {
     [java]         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:372: ERROR - could not determine the type of this expression
     [java]     bitsbuf |= octet << bitsbuflen;
     [java]                ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:378: ERROR - could not determine the type of this expression
     [java]   codeLength = codeWithLength >>> 16;
     [java]                ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:384: ERROR - could not determine the type of this expression
     [java]   return codeWithLength & 0xffff;
     [java]          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:413: ERROR - could not determine the type of this expression
     [java]   if (octet === void 0) {
     [java]       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:416: ERROR - could not determine the type of this expression
     [java]   len = octet;
     [java]         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:420: ERROR - could not determine the type of this expression
     [java]   if (octet === void 0) {
     [java]       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:423: ERROR - could not determine the type of this expression
     [java]   len |= octet << 8;
     [java]   ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:423: ERROR - could not determine the type of this expression
     [java]   len |= octet << 8;
     [java]          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:427: ERROR - could not determine the type of this expression
     [java]   if (octet === void 0) {
     [java]       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:430: ERROR - could not determine the type of this expression
     [java]   nlen = octet;
     [java]          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:434: ERROR - could not determine the type of this expression
     [java]   if (octet === void 0) {
     [java]       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:437: ERROR - could not determine the type of this expression
     [java]   nlen |= octet << 8;
     [java]   ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:437: ERROR - could not determine the type of this expression
     [java]   nlen |= octet << 8;
     [java]           ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:440: ERROR - could not determine the type of this expression
     [java]   if (len === ~nlen) {
     [java]       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:440: ERROR - could not determine the type of this expression
     [java]   if (len === ~nlen) {
     [java]                ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:445: ERROR - could not determine the type of this expression
     [java]   if (ip + len > input.length) { throw new Error('input buffer is broken'); }
     [java]       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:445: ERROR - could not determine the type of this expression
     [java]   if (ip + len > input.length) { throw new Error('input buffer is broken'); }
     [java]            ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:451: ERROR - could not determine the type of this expression
     [java]       while (op + len >= output.length) {
     [java]              ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:451: ERROR - could not determine the type of this expression
     [java]       while (op + len >= output.length) {
     [java]                   ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:453: ERROR - could not determine the type of this expression
     [java]         len -= preCopy;
     [java]         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:456: ERROR - could not determine the type of this expression
     [java]           op += preCopy;
     [java]           ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:457: ERROR - could not determine the type of this expression
     [java]           ip += preCopy;
     [java]           ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:465: ERROR - could not determine the type of this expression
     [java]         op = this.op;
     [java]         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:469: ERROR - could not determine the type of this expression
     [java]       while (op + len > output.length) {
     [java]              ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:469: ERROR - could not determine the type of this expression
     [java]       while (op + len > output.length) {
     [java]                   ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:479: ERROR - could not determine the type of this expression
     [java]     output.set(input.subarray(ip, ip + len), op);
     [java]                                   ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:479: ERROR - could not determine the type of this expression
     [java]     output.set(input.subarray(ip, ip + len), op);
     [java]                                        ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:480: ERROR - could not determine the type of this expression
     [java]     op += len;
     [java]     ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:480: ERROR - could not determine the type of this expression
     [java]     op += len;
     [java]           ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:481: ERROR - could not determine the type of this expression
     [java]     ip += len;
     [java]     ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:481: ERROR - could not determine the type of this expression
     [java]     ip += len;
     [java]           ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:483: ERROR - could not determine the type of this expression
     [java]     while (len--) {
     [java]            ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:488: ERROR - could not determine the type of this expression
     [java]   this.ip = ip;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:489: ERROR - could not determine the type of this expression
     [java]   this.op = op;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:498: ERROR - could not determine the type of this expression
     [java]     Zlib.Inflate.FixedLiteralLengthTable,
     [java]     ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:499: ERROR - could not determine the type of this expression
     [java]     Zlib.Inflate.FixedDistanceTable
     [java]     ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:515: ERROR - could not determine the type of this expression
     [java]     new (USE_TYPEDARRAY ? Uint8Array : Array)(Zlib.Inflate.Order.length);
     [java]                                               ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:529: ERROR - could not determine the type of this expression
     [java]     codeLengths[Zlib.Inflate.Order[i]] = this.readBits(3);
     [java]                 ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:540: ERROR - could not determine the type of this expression
     [java]     for (i = 0; i < num;) {
     [java]                     ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:541: ERROR - could not determine the type of this expression
     [java]       code = this.readCodeByTable(table);
     [java]       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:541: ERROR - could not determine the type of this expression
     [java]       code = this.readCodeByTable(table);
     [java]              ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:541: ERROR - could not determine the type of this expression
     [java]       code = this.readCodeByTable(table);
     [java]                                   ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:542: ERROR - could not determine the type of this expression
     [java]       switch (code) {
     [java]               ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:544: ERROR - could not determine the type of this expression
     [java]           repeat = 3 + this.readBits(2);
     [java]           ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:544: ERROR - could not determine the type of this expression
     [java]           repeat = 3 + this.readBits(2);
     [java]                    ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:544: ERROR - could not determine the type of this expression
     [java]           repeat = 3 + this.readBits(2);
     [java]                        ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:545: ERROR - could not determine the type of this expression
     [java]           while (repeat--) { lengths[i++] = prev; }
     [java]                  ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:545: ERROR - could not determine the type of this expression
     [java]           while (repeat--) { lengths[i++] = prev; }
     [java]                              ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:545: ERROR - could not determine the type of this expression
     [java]           while (repeat--) { lengths[i++] = prev; }
     [java]                                             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:548: ERROR - could not determine the type of this expression
     [java]           repeat = 3 + this.readBits(3);
     [java]           ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:548: ERROR - could not determine the type of this expression
     [java]           repeat = 3 + this.readBits(3);
     [java]                    ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:548: ERROR - could not determine the type of this expression
     [java]           repeat = 3 + this.readBits(3);
     [java]                        ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:549: ERROR - could not determine the type of this expression
     [java]           while (repeat--) { lengths[i++] = 0; }
     [java]                  ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:549: ERROR - could not determine the type of this expression
     [java]           while (repeat--) { lengths[i++] = 0; }
     [java]                              ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:550: ERROR - could not determine the type of this expression
     [java]           prev = 0;
     [java]           ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:553: ERROR - could not determine the type of this expression
     [java]           repeat = 11 + this.readBits(7);
     [java]           ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:553: ERROR - could not determine the type of this expression
     [java]           repeat = 11 + this.readBits(7);
     [java]                    ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:553: ERROR - could not determine the type of this expression
     [java]           repeat = 11 + this.readBits(7);
     [java]                         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:554: ERROR - could not determine the type of this expression
     [java]           while (repeat--) { lengths[i++] = 0; }
     [java]                  ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:554: ERROR - could not determine the type of this expression
     [java]           while (repeat--) { lengths[i++] = 0; }
     [java]                              ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:555: ERROR - could not determine the type of this expression
     [java]           prev = 0;
     [java]           ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:558: ERROR - could not determine the type of this expression
     [java]           lengths[i++] = code;
     [java]           ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:558: ERROR - could not determine the type of this expression
     [java]           lengths[i++] = code;
     [java]                          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:559: ERROR - could not determine the type of this expression
     [java]           prev = code;
     [java]           ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:559: ERROR - could not determine the type of this expression
     [java]           prev = code;
     [java]                  ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:564: ERROR - could not determine the type of this expression
     [java]     return lengths;
     [java]            ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:575: ERROR - could not determine the type of this expression
     [java]     buildHuffmanTable(decode.call(this, hlit, codeLengthsTable, litlenLengths)),
     [java]                       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:576: ERROR - could not determine the type of this expression
     [java]     buildHuffmanTable(decode.call(this, hdist, codeLengthsTable, distLengths))
     [java]                       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:622: ERROR - could not determine the type of this expression
     [java]     codeLength = Zlib.Inflate.LengthCodeTable[ti];
     [java]                  ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:623: ERROR - could not determine the type of this expression
     [java]     if (Zlib.Inflate.LengthExtraTable[ti] > 0) {
     [java]         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:624: ERROR - could not determine the type of this expression
     [java]       codeLength += this.readBits(Zlib.Inflate.LengthExtraTable[ti]);
     [java]       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:624: ERROR - could not determine the type of this expression
     [java]       codeLength += this.readBits(Zlib.Inflate.LengthExtraTable[ti]);
     [java]                                   ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:629: ERROR - could not determine the type of this expression
     [java]     codeDist = Zlib.Inflate.DistCodeTable[code];
     [java]                ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:630: ERROR - could not determine the type of this expression
     [java]     if (Zlib.Inflate.DistExtraTable[code] > 0) {
     [java]         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:631: ERROR - could not determine the type of this expression
     [java]       codeDist += this.readBits(Zlib.Inflate.DistExtraTable[code]);
     [java]       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:631: ERROR - could not determine the type of this expression
     [java]       codeDist += this.readBits(Zlib.Inflate.DistExtraTable[code]);
     [java]                                 ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:640: ERROR - could not determine the type of this expression
     [java]     while (codeLength--) {
     [java]            ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:641: ERROR - could not determine the type of this expression
     [java]       output[op] = output[(op++) - codeDist];
     [java]                                    ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:689: ERROR - could not determine the type of this expression
     [java]     codeLength = Zlib.Inflate.LengthCodeTable[ti];
     [java]                  ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:690: ERROR - could not determine the type of this expression
     [java]     if (Zlib.Inflate.LengthExtraTable[ti] > 0) {
     [java]         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:691: ERROR - could not determine the type of this expression
     [java]       codeLength += this.readBits(Zlib.Inflate.LengthExtraTable[ti]);
     [java]       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:691: ERROR - could not determine the type of this expression
     [java]       codeLength += this.readBits(Zlib.Inflate.LengthExtraTable[ti]);
     [java]                                   ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:696: ERROR - could not determine the type of this expression
     [java]     codeDist = Zlib.Inflate.DistCodeTable[code];
     [java]                ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:697: ERROR - could not determine the type of this expression
     [java]     if (Zlib.Inflate.DistExtraTable[code] > 0) {
     [java]         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:698: ERROR - could not determine the type of this expression
     [java]       codeDist += this.readBits(Zlib.Inflate.DistExtraTable[code]);
     [java]       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:698: ERROR - could not determine the type of this expression
     [java]       codeDist += this.readBits(Zlib.Inflate.DistExtraTable[code]);
     [java]                                 ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:702: ERROR - could not determine the type of this expression
     [java]     if (op + codeLength >= olength) {
     [java]         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:702: ERROR - could not determine the type of this expression
     [java]     if (op + codeLength >= olength) {
     [java]              ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:706: ERROR - could not determine the type of this expression
     [java]     while (codeLength--) {
     [java]            ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:707: ERROR - could not determine the type of this expression
     [java]       output[op] = output[(op++) - codeDist];
     [java]                                    ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:783: ERROR - could not determine the type of this expression
     [java]     if (typeof opt_param.fixRatio === 'number') {
     [java]                ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:786: ERROR - could not determine the type of this expression
     [java]     if (typeof opt_param.addRatio === 'number') {
     [java]                ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:794: ERROR - could not determine the type of this expression
     [java]       (input.length - this.ip) / this.currentLitlenTable[2];
     [java]                                  ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:852: ERROR - could not determine the type of this expression
     [java]     for (j = 0, jl = block.length; j < jl; ++j) {
     [java]          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:852: ERROR - could not determine the type of this expression
     [java]     for (j = 0, jl = block.length; j < jl; ++j) {
     [java]                      ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:852: ERROR - could not determine the type of this expression
     [java]     for (j = 0, jl = block.length; j < jl; ++j) {
     [java]                                        ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:853: ERROR - could not determine the type of this expression
     [java]       buffer[pos++] = block[j];
     [java]                       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:941: ERROR - could not determine the type of this expression
     [java]     if (lengths[i] > maxCodeLength) {
     [java]                      ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:944: ERROR - could not determine the type of this expression
     [java]     if (lengths[i] < minCodeLength) {
     [java]                      ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:949: ERROR - could not determine the type of this expression
     [java]   size = 1 << maxCodeLength;
     [java]               ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:953: ERROR - could not determine the type of this expression
     [java]   for (bitLength = 1, code = 0, skip = 2; bitLength <= maxCodeLength;) {
     [java]                                                        ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:980: ERROR - could not determine the type of this expression
     [java]   return [table, maxCodeLength, minCodeLength];
     [java]                  ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/inflate.js:980: ERROR - could not determine the type of this expression
     [java]   return [table, maxCodeLength, minCodeLength];
     [java]                                 ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:59: ERROR - could not determine the type of this expression
     [java]     if (typeof(opt_param.lazy) === 'number') {
     [java]                ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:62: ERROR - could not determine the type of this expression
     [java]     if (typeof(opt_param.compressionType) === 'number') {
     [java]                ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:123: ERROR - could not determine the type of this expression
     [java] Zlib.RawDeflate.FixedHuffmanTable = (function() {
     [java]                                      ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:351: ERROR - could not determine the type of this expression
     [java]   litLenCodes = litLen[0];
     [java]   ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:351: ERROR - could not determine the type of this expression
     [java]   litLenCodes = litLen[0];
     [java]                 ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:352: ERROR - could not determine the type of this expression
     [java]   litLenLengths = litLen[1];
     [java]   ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:352: ERROR - could not determine the type of this expression
     [java]   litLenLengths = litLen[1];
     [java]                   ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:353: ERROR - could not determine the type of this expression
     [java]   distCodes = dist[0];
     [java]   ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:353: ERROR - could not determine the type of this expression
     [java]   distCodes = dist[0];
     [java]               ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:354: ERROR - could not determine the type of this expression
     [java]   distLengths = dist[1];
     [java]   ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:354: ERROR - could not determine the type of this expression
     [java]   distLengths = dist[1];
     [java]                 ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:358: ERROR - could not determine the type of this expression
     [java]     literal = dataArray[index];
     [java]     ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:361: ERROR - could not determine the type of this expression
     [java]     stream.writeBits(litLenCodes[literal], litLenLengths[literal], true);
     [java]                      ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:361: ERROR - could not determine the type of this expression
     [java]     stream.writeBits(litLenCodes[literal], litLenLengths[literal], true);
     [java]                                  ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:361: ERROR - could not determine the type of this expression
     [java]     stream.writeBits(litLenCodes[literal], litLenLengths[literal], true);
     [java]                                            ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:361: ERROR - could not determine the type of this expression
     [java]     stream.writeBits(litLenCodes[literal], litLenLengths[literal], true);
     [java]                                                          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:364: ERROR - could not determine the type of this expression
     [java]     if (literal > 256) {
     [java]         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:368: ERROR - could not determine the type of this expression
     [java]       code = dataArray[++index];
     [java]       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:369: ERROR - could not determine the type of this expression
     [java]       stream.writeBits(distCodes[code], distLengths[code], true);
     [java]                        ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:369: ERROR - could not determine the type of this expression
     [java]       stream.writeBits(distCodes[code], distLengths[code], true);
     [java]                                  ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:369: ERROR - could not determine the type of this expression
     [java]       stream.writeBits(distCodes[code], distLengths[code], true);
     [java]                                         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:369: ERROR - could not determine the type of this expression
     [java]       stream.writeBits(distCodes[code], distLengths[code], true);
     [java]                                                     ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:373: ERROR - could not determine the type of this expression
     [java]     } else if (literal === 256) {
     [java]                ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:396: ERROR - could not determine the type of this expression
     [java]     literal = dataArray[index];
     [java]     ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:401: ERROR - could not determine the type of this expression
     [java]       Zlib.RawDeflate.FixedHuffmanTable[literal]
     [java]                                         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:405: ERROR - could not determine the type of this expression
     [java]     if (literal > 0x100) {
     [java]         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:413: ERROR - could not determine the type of this expression
     [java]     } else if (literal === 0x100) {
     [java]                ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:436: ERROR - could not determine the type of this expression
     [java] Lz77Match.LengthCodeTable = (function(table) {
     [java]                              ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:437: ERROR - could not determine the type of this expression
     [java]   return USE_TYPEDARRAY ? new Uint32Array(table) : table;
     [java]          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:437: ERROR - could not determine the type of this expression
     [java]   return USE_TYPEDARRAY ? new Uint32Array(table) : table;
     [java]                                           ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:437: ERROR - could not determine the type of this expression
     [java]   return USE_TYPEDARRAY ? new Uint32Array(table) : table;
     [java]                                                    ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:438: ERROR - could not determine the type of this expression
     [java] })((function() {
     [java]     ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:444: ERROR - could not determine the type of this expression
     [java]     c = code(i);
     [java]     ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:444: ERROR - could not determine the type of this expression
     [java]     c = code(i);
     [java]         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:445: ERROR - could not determine the type of this expression
     [java]     table[i] = (c[2] << 24) | (c[1] << 16) | c[0];
     [java]                 ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:445: ERROR - could not determine the type of this expression
     [java]     table[i] = (c[2] << 24) | (c[1] << 16) | c[0];
     [java]                                ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:445: ERROR - could not determine the type of this expression
     [java]     table[i] = (c[2] << 24) | (c[1] << 16) | c[0];
     [java]                                              ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:450: ERROR - could not determine the type of this expression
     [java]       case (length === 3): return [257, length - 3, 0]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:450: ERROR - could not determine the type of this expression
     [java]       case (length === 3): return [257, length - 3, 0]; break;
     [java]                                         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:451: ERROR - could not determine the type of this expression
     [java]       case (length === 4): return [258, length - 4, 0]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:451: ERROR - could not determine the type of this expression
     [java]       case (length === 4): return [258, length - 4, 0]; break;
     [java]                                         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:452: ERROR - could not determine the type of this expression
     [java]       case (length === 5): return [259, length - 5, 0]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:452: ERROR - could not determine the type of this expression
     [java]       case (length === 5): return [259, length - 5, 0]; break;
     [java]                                         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:453: ERROR - could not determine the type of this expression
     [java]       case (length === 6): return [260, length - 6, 0]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:453: ERROR - could not determine the type of this expression
     [java]       case (length === 6): return [260, length - 6, 0]; break;
     [java]                                         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:454: ERROR - could not determine the type of this expression
     [java]       case (length === 7): return [261, length - 7, 0]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:454: ERROR - could not determine the type of this expression
     [java]       case (length === 7): return [261, length - 7, 0]; break;
     [java]                                         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:455: ERROR - could not determine the type of this expression
     [java]       case (length === 8): return [262, length - 8, 0]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:455: ERROR - could not determine the type of this expression
     [java]       case (length === 8): return [262, length - 8, 0]; break;
     [java]                                         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:456: ERROR - could not determine the type of this expression
     [java]       case (length === 9): return [263, length - 9, 0]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:456: ERROR - could not determine the type of this expression
     [java]       case (length === 9): return [263, length - 9, 0]; break;
     [java]                                         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:457: ERROR - could not determine the type of this expression
     [java]       case (length === 10): return [264, length - 10, 0]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:457: ERROR - could not determine the type of this expression
     [java]       case (length === 10): return [264, length - 10, 0]; break;
     [java]                                          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:458: ERROR - could not determine the type of this expression
     [java]       case (length <= 12): return [265, length - 11, 1]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:458: ERROR - could not determine the type of this expression
     [java]       case (length <= 12): return [265, length - 11, 1]; break;
     [java]                                         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:459: ERROR - could not determine the type of this expression
     [java]       case (length <= 14): return [266, length - 13, 1]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:459: ERROR - could not determine the type of this expression
     [java]       case (length <= 14): return [266, length - 13, 1]; break;
     [java]                                         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:460: ERROR - could not determine the type of this expression
     [java]       case (length <= 16): return [267, length - 15, 1]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:460: ERROR - could not determine the type of this expression
     [java]       case (length <= 16): return [267, length - 15, 1]; break;
     [java]                                         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:461: ERROR - could not determine the type of this expression
     [java]       case (length <= 18): return [268, length - 17, 1]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:461: ERROR - could not determine the type of this expression
     [java]       case (length <= 18): return [268, length - 17, 1]; break;
     [java]                                         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:462: ERROR - could not determine the type of this expression
     [java]       case (length <= 22): return [269, length - 19, 2]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:462: ERROR - could not determine the type of this expression
     [java]       case (length <= 22): return [269, length - 19, 2]; break;
     [java]                                         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:463: ERROR - could not determine the type of this expression
     [java]       case (length <= 26): return [270, length - 23, 2]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:463: ERROR - could not determine the type of this expression
     [java]       case (length <= 26): return [270, length - 23, 2]; break;
     [java]                                         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:464: ERROR - could not determine the type of this expression
     [java]       case (length <= 30): return [271, length - 27, 2]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:464: ERROR - could not determine the type of this expression
     [java]       case (length <= 30): return [271, length - 27, 2]; break;
     [java]                                         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:465: ERROR - could not determine the type of this expression
     [java]       case (length <= 34): return [272, length - 31, 2]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:465: ERROR - could not determine the type of this expression
     [java]       case (length <= 34): return [272, length - 31, 2]; break;
     [java]                                         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:466: ERROR - could not determine the type of this expression
     [java]       case (length <= 42): return [273, length - 35, 3]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:466: ERROR - could not determine the type of this expression
     [java]       case (length <= 42): return [273, length - 35, 3]; break;
     [java]                                         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:467: ERROR - could not determine the type of this expression
     [java]       case (length <= 50): return [274, length - 43, 3]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:467: ERROR - could not determine the type of this expression
     [java]       case (length <= 50): return [274, length - 43, 3]; break;
     [java]                                         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:468: ERROR - could not determine the type of this expression
     [java]       case (length <= 58): return [275, length - 51, 3]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:468: ERROR - could not determine the type of this expression
     [java]       case (length <= 58): return [275, length - 51, 3]; break;
     [java]                                         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:469: ERROR - could not determine the type of this expression
     [java]       case (length <= 66): return [276, length - 59, 3]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:469: ERROR - could not determine the type of this expression
     [java]       case (length <= 66): return [276, length - 59, 3]; break;
     [java]                                         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:470: ERROR - could not determine the type of this expression
     [java]       case (length <= 82): return [277, length - 67, 4]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:470: ERROR - could not determine the type of this expression
     [java]       case (length <= 82): return [277, length - 67, 4]; break;
     [java]                                         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:471: ERROR - could not determine the type of this expression
     [java]       case (length <= 98): return [278, length - 83, 4]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:471: ERROR - could not determine the type of this expression
     [java]       case (length <= 98): return [278, length - 83, 4]; break;
     [java]                                         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:472: ERROR - could not determine the type of this expression
     [java]       case (length <= 114): return [279, length - 99, 4]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:472: ERROR - could not determine the type of this expression
     [java]       case (length <= 114): return [279, length - 99, 4]; break;
     [java]                                          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:473: ERROR - could not determine the type of this expression
     [java]       case (length <= 130): return [280, length - 115, 4]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:473: ERROR - could not determine the type of this expression
     [java]       case (length <= 130): return [280, length - 115, 4]; break;
     [java]                                          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:474: ERROR - could not determine the type of this expression
     [java]       case (length <= 162): return [281, length - 131, 5]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:474: ERROR - could not determine the type of this expression
     [java]       case (length <= 162): return [281, length - 131, 5]; break;
     [java]                                          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:475: ERROR - could not determine the type of this expression
     [java]       case (length <= 194): return [282, length - 163, 5]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:475: ERROR - could not determine the type of this expression
     [java]       case (length <= 194): return [282, length - 163, 5]; break;
     [java]                                          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:476: ERROR - could not determine the type of this expression
     [java]       case (length <= 226): return [283, length - 195, 5]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:476: ERROR - could not determine the type of this expression
     [java]       case (length <= 226): return [283, length - 195, 5]; break;
     [java]                                          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:477: ERROR - could not determine the type of this expression
     [java]       case (length <= 257): return [284, length - 227, 5]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:477: ERROR - could not determine the type of this expression
     [java]       case (length <= 257): return [284, length - 227, 5]; break;
     [java]                                          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:478: ERROR - could not determine the type of this expression
     [java]       case (length === 258): return [285, length - 258, 0]; break;
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:478: ERROR - could not determine the type of this expression
     [java]       case (length === 258): return [285, length - 258, 0]; break;
     [java]                                           ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:479: ERROR - could not determine the type of this expression
     [java]       default: throw 'invalid length: ' + length;
     [java]                                           ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:546: ERROR - could not determine the type of this expression
     [java]   code = Lz77Match.LengthCodeTable[length];
     [java]   ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:546: ERROR - could not determine the type of this expression
     [java]   code = Lz77Match.LengthCodeTable[length];
     [java]          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:547: ERROR - could not determine the type of this expression
     [java]   codeArray[pos++] = code & 0xffff;
     [java]                      ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:548: ERROR - could not determine the type of this expression
     [java]   codeArray[pos++] = (code >> 16) & 0xff;
     [java]                       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:549: ERROR - could not determine the type of this expression
     [java]   codeArray[pos++] = code >> 24;
     [java]                      ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:552: ERROR - could not determine the type of this expression
     [java]   code = this.getDistanceCode_(dist);
     [java]   ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:598: ERROR - could not determine the type of this expression
     [java]   var lazy = this.lazy;
     [java]              ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:662: ERROR - could not determine the type of this expression
     [java]         lz77buf[pos++] = tmp;
     [java]                          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:663: ERROR - could not determine the type of this expression
     [java]         ++freqsLitLen[tmp];
     [java]                       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:674: ERROR - could not determine the type of this expression
     [java]         if (prevMatch.length < longestMatch.length) {
     [java]             ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:677: ERROR - could not determine the type of this expression
     [java]           lz77buf[pos++] = tmp;
     [java]                            ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:678: ERROR - could not determine the type of this expression
     [java]           ++freqsLitLen[tmp];
     [java]                         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:696: ERROR - could not determine the type of this expression
     [java]       lz77buf[pos++] = tmp;
     [java]                        ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:697: ERROR - could not determine the type of this expression
     [java]       ++freqsLitLen[tmp];
     [java]                     ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:727: ERROR - could not determine the type of this expression
     [java]       i, j, l, dl = data.length;
     [java]                     ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:747: ERROR - could not determine the type of this expression
     [java]            position + matchLength < dl &&
     [java]                                     ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:873: ERROR - could not determine the type of this expression
     [java]       USE_TYPEDARRAY ?
     [java]       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:874: ERROR - could not determine the type of this expression
     [java]       result.subarray(0, nResult) :
     [java]       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:875: ERROR - could not determine the type of this expression
     [java]       result.slice(0, nResult),
     [java]       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:905: ERROR - could not determine the type of this expression
     [java]       if (smallestFreq > freqs[i]) {
     [java]           ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:906: ERROR - could not determine the type of this expression
     [java]         smallestFreq = freqs[i];
     [java]         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:908: ERROR - could not determine the type of this expression
     [java]       totalFreq += freqs[i];
     [java]       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:914: ERROR - could not determine the type of this expression
     [java]     freqs[freqsZero.shift()] = 1;
     [java]           ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:919: ERROR - could not determine the type of this expression
     [java]     totalFreq = 0;
     [java]     ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:929: ERROR - could not determine the type of this expression
     [java]     num = totalFreq - smallestFreq * maxProb;
     [java]                       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:936: ERROR - could not determine the type of this expression
     [java]         freqs[i] += adjust;
     [java]         ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:968: ERROR - could not determine the type of this expression
     [java]       length[i] = 1 + length[parent[i]];
     [java]                   ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:973: ERROR - could not determine the type of this expression
     [java]     USE_TYPEDARRAY ?
     [java]     ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:974: ERROR - could not determine the type of this expression
     [java]     length.subarray(0, nSymbols) :
     [java]     ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:975: ERROR - could not determine the type of this expression
     [java]     length.slice(0, nSymbols)
     [java]     ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:1000: ERROR - could not determine the type of this expression
     [java]     code += count[i] | 0;
     [java]     ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:1017: ERROR - could not determine the type of this expression
     [java]     code = startCode[lengths[i]];
     [java]     ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:1018: ERROR - could not determine the type of this expression
     [java]     startCode[lengths[i]] += 1;
     [java]     ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:1020: ERROR - could not determine the type of this expression
     [java]     for (j = 0, m = lengths[i]; j < m; j++) {
     [java]          ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:1020: ERROR - could not determine the type of this expression
     [java]     for (j = 0, m = lengths[i]; j < m; j++) {
     [java]                 ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:1020: ERROR - could not determine the type of this expression
     [java]     for (j = 0, m = lengths[i]; j < m; j++) {
     [java]                                     ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:1021: ERROR - could not determine the type of this expression
     [java]       codes[i] = (codes[i] << 1) | (code & 1);
     [java]                                     ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/rawdeflate.js:1022: ERROR - could not determine the type of this expression
     [java]       code >>>= 1;
     [java]       ^
     [java] 
     [java] /Users/yuta.imaya/git/zlib.js/src/util.js:62: ERROR - could not determine the type of this expression
     [java]   return tmp.reverse();
     [java]          ^
     [java] 
     [java] closure-primitives/base.js:104: ERROR - could not determine the type of this expression
     [java]       if (goog.getObjectByName(namespace)) {
     [java]           ^
     [java] 
     [java] closure-primitives/base.js:140: ERROR - could not determine the type of this expression
     [java]     return !goog.implicitNamespaces_[name] && !!goog.getObjectByName(name);
     [java]                                                 ^
     [java] 
     [java] closure-primitives/base.js:174: ERROR - could not determine the type of this expression
     [java]   if (!(parts[0] in cur) && cur.execScript) {
     [java]       ^
     [java] 
     [java] closure-primitives/base.js:174: ERROR - could not determine the type of this expression
     [java]   if (!(parts[0] in cur) && cur.execScript) {
     [java]                             ^
     [java] 
     [java] closure-primitives/base.js:175: ERROR - could not determine the type of this expression
     [java]     cur.execScript('var ' + parts[0]);
     [java]     ^
     [java] 
     [java] closure-primitives/base.js:184: ERROR - could not determine the type of this expression
     [java]   for (var part; parts.length && (part = parts.shift());) {
     [java]                  ^
     [java] 
     [java] closure-primitives/base.js:184: ERROR - could not determine the type of this expression
     [java]   for (var part; parts.length && (part = parts.shift());) {
     [java]                                   ^
     [java] 
     [java] closure-primitives/base.js:184: ERROR - could not determine the type of this expression
     [java]   for (var part; parts.length && (part = parts.shift());) {
     [java]                                          ^
     [java] 
     [java] closure-primitives/base.js:187: ERROR - could not determine the type of this expression
     [java]       cur[part] = opt_object;
     [java]       ^
     [java] 
     [java] closure-primitives/base.js:187: ERROR - could not determine the type of this expression
     [java]       cur[part] = opt_object;
     [java]           ^
     [java] 
     [java] closure-primitives/base.js:188: ERROR - could not determine the type of this expression
     [java]     } else if (cur[part]) {
     [java]                ^
     [java] 
     [java] closure-primitives/base.js:188: ERROR - could not determine the type of this expression
     [java]     } else if (cur[part]) {
     [java]                    ^
     [java] 
     [java] closure-primitives/base.js:189: ERROR - could not determine the type of this expression
     [java]       cur = cur[part];
     [java]       ^
     [java] 
     [java] closure-primitives/base.js:189: ERROR - could not determine the type of this expression
     [java]       cur = cur[part];
     [java]             ^
     [java] 
     [java] closure-primitives/base.js:189: ERROR - could not determine the type of this expression
     [java]       cur = cur[part];
     [java]                 ^
     [java] 
     [java] closure-primitives/base.js:191: ERROR - could not determine the type of this expression
     [java]       cur = cur[part] = {};
     [java]       ^
     [java] 
     [java] closure-primitives/base.js:191: ERROR - could not determine the type of this expression
     [java]       cur = cur[part] = {};
     [java]             ^
     [java] 
     [java] closure-primitives/base.js:191: ERROR - could not determine the type of this expression
     [java]       cur = cur[part] = {};
     [java]                 ^
     [java] 
     [java] closure-primitives/base.js:210: ERROR - could not determine the type of this expression
     [java]   for (var part; part = parts.shift(); ) {
     [java]                  ^
     [java] 
     [java] closure-primitives/base.js:210: ERROR - could not determine the type of this expression
     [java]   for (var part; part = parts.shift(); ) {
     [java]                         ^
     [java] 
     [java] closure-primitives/base.js:211: ERROR - could not determine the type of this expression
     [java]     if (goog.isDefAndNotNull(cur[part])) {
     [java]                              ^
     [java] 
     [java] closure-primitives/base.js:211: ERROR - could not determine the type of this expression
     [java]     if (goog.isDefAndNotNull(cur[part])) {
     [java]                                  ^
     [java] 
     [java] closure-primitives/base.js:212: ERROR - could not determine the type of this expression
     [java]       cur = cur[part];
     [java]       ^
     [java] 
     [java] closure-primitives/base.js:212: ERROR - could not determine the type of this expression
     [java]       cur = cur[part];
     [java]             ^
     [java] 
     [java] closure-primitives/base.js:212: ERROR - could not determine the type of this expression
     [java]       cur = cur[part];
     [java]                 ^
     [java] 
     [java] closure-primitives/base.js:217: ERROR - could not determine the type of this expression
     [java]   return cur;
     [java]          ^
     [java] 
     [java] closure-primitives/base.js:250: ERROR - could not determine the type of this expression
     [java]     for (var i = 0; provide = provides[i]; i++) {
     [java]                     ^
     [java] 
     [java] closure-primitives/base.js:251: ERROR - could not determine the type of this expression
     [java]       deps.nameToPath[provide] = path;
     [java]       ^
     [java] 
     [java] closure-primitives/base.js:251: ERROR - could not determine the type of this expression
     [java]       deps.nameToPath[provide] = path;
     [java]                       ^
     [java] 
     [java] closure-primitives/base.js:252: ERROR - could not determine the type of this expression
     [java]       if (!(path in deps.pathToNames)) {
     [java]                     ^
     [java] 
     [java] closure-primitives/base.js:253: ERROR - could not determine the type of this expression
     [java]         deps.pathToNames[path] = {};
     [java]         ^
     [java] 
     [java] closure-primitives/base.js:255: ERROR - could not determine the type of this expression
     [java]       deps.pathToNames[path][provide] = true;
     [java]       ^
     [java] 
     [java] closure-primitives/base.js:255: ERROR - could not determine the type of this expression
     [java]       deps.pathToNames[path][provide] = true;
     [java]                              ^
     [java] 
     [java] closure-primitives/base.js:257: ERROR - could not determine the type of this expression
     [java]     for (var j = 0; require = requires[j]; j++) {
     [java]                     ^
     [java] 
     [java] closure-primitives/base.js:258: ERROR - could not determine the type of this expression
     [java]       if (!(path in deps.requires)) {
     [java]                     ^
     [java] 
     [java] closure-primitives/base.js:259: ERROR - could not determine the type of this expression
     [java]         deps.requires[path] = {};
     [java]         ^
     [java] 
     [java] closure-primitives/base.js:261: ERROR - could not determine the type of this expression
     [java]       deps.requires[path][require] = true;
     [java]       ^
     [java] 
     [java] closure-primitives/base.js:261: ERROR - could not determine the type of this expression
     [java]       deps.requires[path][require] = true;
     [java]                           ^
     [java] 
     [java] closure-primitives/base.js:374: ERROR - could not determine the type of this expression
     [java] goog.global.CLOSURE_IMPORT_SCRIPT;
     [java] ^
     [java] 
     [java] closure-primitives/base.js:427: ERROR - could not determine the type of this expression
     [java]     if (ctor.instance_) {
     [java]         ^
     [java] 
     [java] closure-primitives/base.js:428: ERROR - could not determine the type of this expression
     [java]       return ctor.instance_;
     [java]              ^
     [java] 
     [java] closure-primitives/base.js:504: ERROR - could not determine the type of this expression
     [java]       var src = scripts[i].src;
     [java]                 ^
     [java] 
     [java] closure-primitives/base.js:505: ERROR - could not determine the type of this expression
     [java]       var qmark = src.lastIndexOf('?');
     [java]                   ^
     [java] 
     [java] closure-primitives/base.js:506: ERROR - could not determine the type of this expression
     [java]       var l = qmark == -1 ? src.length : qmark;
     [java]               ^
     [java] 
     [java] closure-primitives/base.js:506: ERROR - could not determine the type of this expression
     [java]       var l = qmark == -1 ? src.length : qmark;
     [java]                             ^
     [java] 
     [java] closure-primitives/base.js:506: ERROR - could not determine the type of this expression
     [java]       var l = qmark == -1 ? src.length : qmark;
     [java]                                          ^
     [java] 
     [java] closure-primitives/base.js:507: ERROR - could not determine the type of this expression
     [java]       if (src.substr(l - 7, 7) == 'base.js') {
     [java]           ^
     [java] 
     [java] closure-primitives/base.js:507: ERROR - could not determine the type of this expression
     [java]       if (src.substr(l - 7, 7) == 'base.js') {
     [java]                      ^
     [java] 
     [java] closure-primitives/base.js:508: ERROR - could not determine the type of this expression
     [java]         goog.basePath = src.substr(0, l - 7);
     [java]                         ^
     [java] 
     [java] closure-primitives/base.js:508: ERROR - could not determine the type of this expression
     [java]         goog.basePath = src.substr(0, l - 7);
     [java]                                       ^
     [java] 
     [java] closure-primitives/base.js:522: ERROR - could not determine the type of this expression
     [java]     var importScript = goog.global.CLOSURE_IMPORT_SCRIPT ||
     [java]                        ^
     [java] 
     [java] closure-primitives/base.js:524: ERROR - could not determine the type of this expression
     [java]     if (!goog.dependencies_.written[src] && importScript(src)) {
     [java]         ^
     [java] 
     [java] closure-primitives/base.js:524: ERROR - could not determine the type of this expression
     [java]     if (!goog.dependencies_.written[src] && importScript(src)) {
     [java]                                             ^
     [java] 
     [java] closure-primitives/base.js:562: ERROR - could not determine the type of this expression
     [java]       if (path in deps.written) {
     [java]           ^
     [java] 
     [java] closure-primitives/base.js:562: ERROR - could not determine the type of this expression
     [java]       if (path in deps.written) {
     [java]                   ^
     [java] 
     [java] closure-primitives/base.js:568: ERROR - could not determine the type of this expression
     [java]       if (path in deps.visited) {
     [java]           ^
     [java] 
     [java] closure-primitives/base.js:568: ERROR - could not determine the type of this expression
     [java]       if (path in deps.visited) {
     [java]                   ^
     [java] 
     [java] closure-primitives/base.js:569: ERROR - could not determine the type of this expression
     [java]         if (!(path in seenScript)) {
     [java]               ^
     [java] 
     [java] closure-primitives/base.js:570: ERROR - could not determine the type of this expression
     [java]           seenScript[path] = true;
     [java]                      ^
     [java] 
     [java] closure-primitives/base.js:571: ERROR - could not determine the type of this expression
     [java]           scripts.push(path);
     [java]           ^
     [java] 
     [java] closure-primitives/base.js:571: ERROR - could not determine the type of this expression
     [java]           scripts.push(path);
     [java]                        ^
     [java] 
     [java] closure-primitives/base.js:576: ERROR - could not determine the type of this expression
     [java]       deps.visited[path] = true;
     [java]       ^
     [java] 
     [java] closure-primitives/base.js:576: ERROR - could not determine the type of this expression
     [java]       deps.visited[path] = true;
     [java]                    ^
     [java] 
     [java] closure-primitives/base.js:578: ERROR - could not determine the type of this expression
     [java]       if (path in deps.requires) {
     [java]           ^
     [java] 
     [java] closure-primitives/base.js:578: ERROR - could not determine the type of this expression
     [java]       if (path in deps.requires) {
     [java]                   ^
     [java] 
     [java] closure-primitives/base.js:579: ERROR - could not determine the type of this expression
     [java]         for (var requireName in deps.requires[path]) {
     [java]                                 ^
     [java] 
     [java] closure-primitives/base.js:579: ERROR - could not determine the type of this expression
     [java]         for (var requireName in deps.requires[path]) {
     [java]                                               ^
     [java] 
     [java] closure-primitives/base.js:583: ERROR - could not determine the type of this expression
     [java]             if (requireName in deps.nameToPath) {
     [java]                                ^
     [java] 
     [java] closure-primitives/base.js:584: ERROR - could not determine the type of this expression
     [java]               visitNode(deps.nameToPath[requireName]);
     [java]                         ^
     [java] 
     [java] closure-primitives/base.js:592: ERROR - could not determine the type of this expression
     [java]       if (!(path in seenScript)) {
     [java]             ^
     [java] 
     [java] closure-primitives/base.js:593: ERROR - could not determine the type of this expression
     [java]         seenScript[path] = true;
     [java]                    ^
     [java] 
     [java] closure-primitives/base.js:594: ERROR - could not determine the type of this expression
     [java]         scripts.push(path);
     [java]         ^
     [java] 
     [java] closure-primitives/base.js:594: ERROR - could not determine the type of this expression
     [java]         scripts.push(path);
     [java]                      ^
     [java] 
     [java] closure-primitives/base.js:599: ERROR - could not determine the type of this expression
     [java]       if (!deps.written[path]) {
     [java]            ^
     [java] 
     [java] closure-primitives/base.js:606: ERROR - could not determine the type of this expression
     [java]         goog.importScript_(goog.basePath + scripts[i]);
     [java]                            ^
     [java] 
     [java] closure-primitives/base.js:699: ERROR - could not determine the type of this expression
     [java]            typeof value.length == 'number' &&
     [java]                   ^
     [java] 
     [java] closure-primitives/base.js:700: ERROR - could not determine the type of this expression
     [java]            typeof value.splice != 'undefined' &&
     [java]                   ^
     [java] 
     [java] closure-primitives/base.js:701: ERROR - could not determine the type of this expression
     [java]            typeof value.propertyIsEnumerable != 'undefined' &&
     [java]                   ^
     [java] 
     [java] closure-primitives/base.js:702: ERROR - could not determine the type of this expression
     [java]            !value.propertyIsEnumerable('splice')
     [java]             ^
     [java] 
     [java] closure-primitives/base.js:722: ERROR - could not determine the type of this expression
     [java]           typeof value.call != 'undefined' &&
     [java]                  ^
     [java] 
     [java] closure-primitives/base.js:723: ERROR - could not determine the type of this expression
     [java]           typeof value.propertyIsEnumerable != 'undefined' &&
     [java]                  ^
     [java] 
     [java] closure-primitives/base.js:724: ERROR - could not determine the type of this expression
     [java]           !value.propertyIsEnumerable('call'))) {
     [java]            ^
     [java] 
     [java] closure-primitives/base.js:733: ERROR - could not determine the type of this expression
     [java]   } else if (s == 'function' && typeof value.call == 'undefined') {
     [java]                                        ^
     [java] 
     [java] closure-primitives/base.js:798: ERROR - could not determine the type of this expression
     [java]   return type == 'array' || type == 'object' && typeof val.length == 'number';
     [java]                                                        ^
     [java] 
     [java] closure-primitives/base.js:884: ERROR - could not determine the type of this expression
     [java]   return obj[goog.UID_PROPERTY_] ||
     [java]          ^
     [java] 
     [java] closure-primitives/base.js:901: ERROR - could not determine the type of this expression
     [java]     obj.removeAttribute(goog.UID_PROPERTY_);
     [java]     ^
     [java] 
     [java] closure-primitives/base.js:965: ERROR - could not determine the type of this expression
     [java]     if (obj.clone) {
     [java]         ^
     [java] 
     [java] closure-primitives/base.js:966: ERROR - could not determine the type of this expression
     [java]       return obj.clone();
     [java]              ^
     [java] 
     [java] closure-primitives/base.js:1033: ERROR - could not determine the type of this expression
     [java]       return fn.apply(selfObj, newArgs);
     [java]              ^
     [java] 
     [java] closure-primitives/base.js:1038: ERROR - could not determine the type of this expression
     [java]       return fn.apply(selfObj, arguments);
     [java]              ^
     [java] 
     [java] closure-primitives/base.js:1106: ERROR - could not determine the type of this expression
     [java]     return fn.apply(this, newArgs);
     [java]            ^
     [java] 
     [java] closure-primitives/base.js:1106: ERROR - could not determine the type of this expression
     [java]     return fn.apply(this, newArgs);
     [java]                     ^
     [java] 
     [java] closure-primitives/base.js:1150: ERROR - could not determine the type of this expression
     [java]   if (goog.global.execScript) {
     [java]       ^
     [java] 
     [java] closure-primitives/base.js:1151: ERROR - could not determine the type of this expression
     [java]     goog.global.execScript(script, 'JavaScript');
     [java]     ^
     [java] 
     [java] closure-primitives/base.js:1247: ERROR - could not determine the type of this expression
     [java]     return goog.cssNameMapping_[cssName] || cssName;
     [java]            ^
     [java] 
     [java] closure-primitives/base.js:1247: ERROR - could not determine the type of this expression
     [java]     return goog.cssNameMapping_[cssName] || cssName;
     [java]                                 ^
     [java] 
     [java] closure-primitives/base.js:1247: ERROR - could not determine the type of this expression
     [java]     return goog.cssNameMapping_[cssName] || cssName;
     [java]                                             ^
     [java] 
     [java] closure-primitives/base.js:1252: ERROR - could not determine the type of this expression
     [java]     var parts = cssName.split('-');
     [java]                 ^
     [java] 
     [java] closure-primitives/base.js:1254: ERROR - could not determine the type of this expression
     [java]     for (var i = 0; i < parts.length; i++) {
     [java]                         ^
     [java] 
     [java] closure-primitives/base.js:1255: ERROR - could not determine the type of this expression
     [java]       mapped.push(getMapping(parts[i]));
     [java]                   ^
     [java] 
     [java] closure-primitives/base.js:1255: ERROR - could not determine the type of this expression
     [java]       mapped.push(getMapping(parts[i]));
     [java]                              ^
     [java] 
     [java] closure-primitives/base.js:1266: ERROR - could not determine the type of this expression
     [java]       return a;
     [java]              ^
     [java] 
     [java] closure-primitives/base.js:1271: ERROR - could not determine the type of this expression
     [java]     return className + '-' + rename(opt_modifier);
     [java]                              ^
     [java] 
     [java] closure-primitives/base.js:1273: ERROR - could not determine the type of this expression
     [java]     return rename(className);
     [java]            ^
     [java] 
     [java] closure-primitives/base.js:1338: ERROR - could not determine the type of this expression
     [java]     var value = ('' + values[key]).replace(/\$/g, '$$$$');
     [java]                  ^
     [java] 
     [java] closure-primitives/base.js:1339: ERROR - could not determine the type of this expression
     [java]     str = str.replace(new RegExp('\\{\\$' + key + '\\}', 'gi'), value);
     [java]                                                                 ^
     [java] 
     [java] closure-primitives/base.js:1454: ERROR - could not determine the type of this expression
     [java]   if (caller.superClass_) {
     [java]       ^
     [java] 
     [java] closure-primitives/base.js:1456: ERROR - could not determine the type of this expression
     [java]     return caller.superClass_.constructor.apply(
     [java]            ^
     [java] 
     [java] closure-primitives/base.js:1463: ERROR - could not determine the type of this expression
     [java]        ctor; ctor = ctor.superClass_ && ctor.superClass_.constructor) {
     [java]        ^
     [java] 
     [java] closure-primitives/base.js:1463: ERROR - could not determine the type of this expression
     [java]        ctor; ctor = ctor.superClass_ && ctor.superClass_.constructor) {
     [java]              ^
     [java] 
     [java] closure-primitives/base.js:1463: ERROR - could not determine the type of this expression
     [java]        ctor; ctor = ctor.superClass_ && ctor.superClass_.constructor) {
     [java]                     ^
     [java] 
     [java] closure-primitives/base.js:1463: ERROR - could not determine the type of this expression
     [java]        ctor; ctor = ctor.superClass_ && ctor.superClass_.constructor) {
     [java]                                         ^
     [java] 
     [java] closure-primitives/base.js:1464: ERROR - could not determine the type of this expression
     [java]     if (ctor.prototype[opt_methodName] === caller) {
     [java]         ^
     [java] 
     [java] closure-primitives/base.js:1467: ERROR - could not determine the type of this expression
     [java]       return ctor.prototype[opt_methodName].apply(me, args);
     [java]              ^
     [java] 
     [java] closure-primitives/base.js:1476: ERROR - could not determine the type of this expression
     [java]     return me.constructor.prototype[opt_methodName].apply(me, args);
     [java]            ^
     [java] 
     [java] 430 error(s), 0 warning(s), 93.6% typed
